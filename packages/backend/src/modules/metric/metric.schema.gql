type APIMetric {
  chunk: Timestamp
  avgLatency: Float
  count: Int
  successes: Int
  failures: Int
}

type CountryMetric {
  country: String
  count: Int
}

type ApiActivity {
  apiDef: String
  apiName: String
  lastAccess: String
  failed: Int
  success: Int
  latency: Float
  count: Int
}

input MetricAggregateFilters {
  startDate: Timestamp!
  endDate: Timestamp!
  sourceId: ID
  apiDef: ID
  user: ID
}

input MetricFilter {
  sourceId: ID
  apiDef: ID
  user: ID
}

type Query {
  getApiActivity(filters: MetricAggregateFilters!): [ApiActivity]
  getChunkedAPIMetrics(chunks: [Timestamp], filters: MetricFilter!): [APIMetric]
  getCountryMetrics(
    filters: MetricAggregateFilters!
    limit: Int
  ): [CountryMetric]
}
