type APIMetric {
  chunk: Timestamp
  avgLatency: Float
  count: Int
  successes: Int
  failures: Int
}

type CountryMetric {
  country: String
  count: Int
}

type ApiActivity {
  apiDef: String
  apiName: String
  lastAccess: String
  failed: Int
  success: Int
  latency: Float
  count: Int
}

input MetricFilters {
  startDate: Timestamp!
  endDate: Timestamp!
  sourceId: ID
  apiDef: ID
  user: ID
}

input MetricFilter {
  sourceId: ID
  apiDef: ID
  user: ID
}

type Query {
  # TODO: move start/end date out of filters
  getApiActivity(filters: MetricFilters!): [ApiActivity]
  getChunkedAPIMetrics(chunks: [Timestamp], filters: MetricFilter!): [APIMetric]
  getCountryMetrics(startDate: Timestamp!, endDate: Timestamp!, filters: MetricFilter!, limit: Int): [CountryMetric]
}
