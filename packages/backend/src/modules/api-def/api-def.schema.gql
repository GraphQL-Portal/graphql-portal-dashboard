type ApiDefAuthentication {
  auth_header_name: String
  auth_tokens: [String!]!
}

type ApiDef {
  _id: ID!
  name: String!
  enabled: Boolean!
  endpoint: String!
  sources: [Source]!
  createdAt: String!
  updatedAt: String!
  authentication: ApiDefAuthentication
  schema_polling_interval: Int
  schema_updates_through_control_api: Boolean
  invalidate_cache_through_control_api: Boolean
  enable_ip_filtering: Boolean
  allow_ips: [String!]
  deny_ips: [String!]
  request_size_limit: String
  depth_limit: Int
  request_complexity_limit: Int
  rate_limit: ApiDefRateLimit
  playground: Boolean!
  mesh: JSONObject
}

type ApiDefWithSchema {
  apiDef: ApiDef
  schema: String
}

type ApiDefRateLimit {
  complexity: Int
  per: Int
}

input CreateApiDefRateLimit {
  complexity: Int
  per: Int
}

input CreateApiDefAuthentication {
  auth_header_name: String
  auth_tokens: [String!]!
}

input CreateApiDef {
  _id: String
  name: String
  endpoint: String
  authentication: CreateApiDefAuthentication
  schema_polling_interval: Int
  schema_updates_through_control_api: Boolean
  invalidate_cache_through_control_api: Boolean
  enable_ip_filtering: Boolean
  allow_ips: [String!]
  deny_ips: [String!]
  request_size_limit: String
  depth_limit: Int
  request_complexity_limit: Int
  rate_limit: CreateApiDefRateLimit
  playground: Boolean
  mesh: JSONObject
}

type ApiDefsWithTimestamp {
  apiDefs: [ApiDef]
  timestamp: Timestamp
}

type Query {
  getApiDefs: ApiDefsWithTimestamp
  getAllApiDefs: ApiDefsWithTimestamp
  getAllApiDefsForGateway: ApiDefsWithTimestamp
  getApiDefById(id: String!): ApiDef
  publishApiDefsUpdated: Int
}

type Mutation {
  createApiDef(apiDef: CreateApiDef!, sources: [ID!]!): ApiDefWithSchema
  updateApiDef(
    id: ID!
    apiDef: CreateApiDef!
    sources: [ID!]!
    enabled: Boolean
  ): ApiDefWithSchema
  deleteApiDef(id: ID!): Boolean
}
