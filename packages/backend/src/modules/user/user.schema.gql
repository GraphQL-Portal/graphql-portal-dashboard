input UpdateUserInput {
  firstName: String
  lastName: String
  role: String
}

input UserInput {
  firstName: String
  lastName: String
  role: String
  email: String!
  password: String!
}

type User {
  _id: ID!
  firstName: String
  lastName: String
  role: String!
  email: String!
  deletedAt: String
  createdAt: String!
  updatedAt: String!
}

type Tokens {
  accessToken: String!
  refreshToken: String!
}

type Mutation {
  login(email: String!, password: String!, device: String!): Tokens!
  register(data: UserInput!): Boolean
  createUser(data: UserInput!): Boolean
  updateUser(id: ID!, data: UpdateUserInput!): User
  blockUser(id: ID!): User
  unblockUser(id: ID!): User
  deleteUser(id: ID!): Boolean
  refreshTokens(refreshToken: String!, device: String!): Tokens!
  resetPasswordRequest(email: String!): Boolean
  resetPassword(email: String!, code: String!, password: String!): Boolean
}

type Query {
  getProfile: User
  getUsers: [User]!
}
